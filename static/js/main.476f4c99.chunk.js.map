{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","mySearchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC1B,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCIGK,EATE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OAAQ,8BACLA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAO,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCOTC,EAXG,SAAC,GAAkC,EAAjCC,YAAkC,IAArBC,EAAoB,EAApBA,eAC/B,OAAQ,qBAAKV,UAAU,MAAf,SACN,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCDI,EAPA,SAACC,GACd,OAAO,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACJJ,EAAMK,YCmBIC,E,kDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,8DAQDC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAME,MACN,yDAEFE,KAAKX,MAAMK,a,GAjBKQ,aC0CZC,G,wDApCb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAZzC,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJH,E,gEASO,IAAD,OAClByB,MAAM,8CAA8C5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAAQ9C,MAAK,SAAA+C,GAAK,OAAI,EAAKV,SAAS,CAACvB,OAAQiC,S,+BAOnH,IAAD,EACuBX,KAAKJ,MAA5BlB,EADA,EACAA,OAAQK,EADR,EACQA,YACT6B,EAAelC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAEvD,OAAQrC,EAAOuC,OAEV,sBAAK3C,UAAU,KAAf,UACD,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,eAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQkC,WANtB,+C,GAxBUV,cCAlBgB,IAASC,OACP,cAAC,EAAD,IACEC,SAASC,eAAe,SAK5B5D,M","file":"static/js/main.476f4c99.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../components/Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  return (<div>\r\n    {robots.map((user, i) => {\r\n      return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    })\r\n  }\r\n  </div>);\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, mySearchChange}) => {\r\n  return (<div className='pa2'>\r\n    <input\r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type='search'\r\n      placeholder='Search Robots'\r\n      onChange={mySearchChange}\r\n    />\r\n  </div>);\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return(<div style={{overflow: 'scroll', border: '1px solid black', height: '800px'}}>\r\n    {props.children}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  //react lifecycle hook\r\n  componentDidCatch(error, info) {\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  render () {\r\n    if (this.state.error) {\r\n      return <h1>Oops, something's wrong</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super(); //calls the constructor of component\r\n    this.state = { //things that can change and affect the app\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  //react lifecycle hook\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({robots: users}));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    const {robots, searchfield} = this.state;\r\n    const filterRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    });\r\n    return !robots.length\r\n      ? <h2>loading..</h2>\r\n      : (<div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox mySearchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filterRobots}/>\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n//--- Notes ---\r\n\r\n//const App = () => {\r\n//same as:\r\n//class App extends Component {\r\n//  render() {\r\n\r\n//put state in cunstructor class\r\n\r\n//to access the robots from the state:\r\n//<CardList robots={robots}/> changed to: <CardList robots={this.state.robots}/>\r\n\r\n//create a fuction to see what happenes on a certain event, in this case, onSearchChange, and apply it to SearachBox\r\n//<SearchBox/> changed to: <SearchBox mySearchChange={this.onSearchChange}/>\r\n//add onChange to SearchBox.js\r\n\r\n//console.log(event.target.value) to log value in serachbox\r\n\r\n//add filterRobots function\r\n\r\n//to avid conflicts with own methods:\r\n//onSearchChange(event) changed to: onSearchChange = (event) =>\r\n\r\n//anytime changing state in react, need to add this.setState:\r\n//this.setState({searchfield: event.target.value})\r\n\r\n//move filterRobots to render() for access to the view\r\n//<CardList robots={this.state.robots}/> changed to: <CardList robots={filterRobots}/>\r\n\r\n//apply react lifecycle hooks (componentDidMount) in order to use APIs\r\n\r\n//add Scroll wrapper\r\n\r\n//adding const {robots, searchfield} = this.state makes sure we can remove this.state from the rest of the render() function:\r\n//if (this.state.robots.length === 0) changed to: if (robots.length === 0)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './containers/App'\r\n\r\nReactDOM.render(\r\n  <App />\r\n  , document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}